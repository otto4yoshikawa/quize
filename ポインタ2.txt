ポインタ　特訓

#1
struct AAA {int x;int y;char z[10];}

と
typedef struct AAA {int x;int y;char z[10];} AAA;

が本質的に同じでｔあることを確認すること
typedef　の　初めの　AAA　と　後ろのAAAは　同じである必要もないし
初めの　AAA　は省略もできる。

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
#include <stdio.h>
void main(){

typedef struct {int x;int y;char z[10];} AAA;
AAA senri;
int x;
x=12;
senri.x=x;
printf("x=%d",senri.x);
}
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

#2
生徒の　id, name ,math を構造体で　１０人分持っている
このターブルに　追加や削除をしたい

consoleから


add  124,yamada,76
del  34

の形式で入力する
そして毎回 math の大きい順に　printせよ
はじめは入力ミスはないものとしてよい

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

#include <stdio.h>
void main(){
int i,N;
typedef struct {int id;char name[40];int math;} AAA;
AAA　genzai[]={
	{100,"ssss",65},
	{101,"gggg",69},
	{141,"gga2",59}
};
	N=sizeof(genzai)/sizeof(AAA);


}
===================================
#include <stdio.h>
//--------macro 3つ定義する　便利だから携帯せよ------------- 
#define	ENQ(org, q)	(q)->next=org,	\
			(q)->prev=(org)->prev,	\
			(org)->prev->next=q,	\
			(org)->prev=q 
#define	DEQ(p)		(p)->prev->next=(p)->next,	\
			(p)->next->prev=(p)->prev
#define	INITQ(p)	(p)->next=(p)->prev=p
//------------------------------
//ENQ は　enque DEQ は　dequeue
void main(){
int i,N;
typedef struct PERSON{int id;char name[40];int math; 
struct PERSON * next,*prev;} PERSON;
PERSON genzai[]={
	{100,"ssss",65,0,0},
	{101,"gggg",69,0,0},
	{141,"gga2",59,0,0}
};
	N=sizeof(genzai)/sizeof(PERSON);
	printf("N=%d\n",N);
PERSON  table[100];
	for(i=0;i<N;i++) table[i]=genzai[i];
PERSON org,*p;
	org.math=-1;
	INITQ(&org);
//math の降順にorgにつなぐ
	for(i=0;i<N;i++){
	p=&org;
	while(p->next!=p && p->math<table[i].math) p=p->next;
	printf("ENQ %d",i);
	ENQ(p,&table[i]);
	}				
//------------------------
	for(p=&org;p=p->next,p!=&org;){
	printf("%d %s %d\n",p->id,p->name,p->math);
	}
}
